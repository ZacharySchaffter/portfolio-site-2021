$border-width: 6px;
$spacing-v-mobile: 80px;
$spacing-v-desktop: 120px;
$bp-min: "md";
$bp-max: "sm";

.project {
  color: $black;
  padding: $spacing-v-mobile + $border-width 0 $spacing-v-mobile;
  position: relative;
  overflow: hidden;

  @include media-breakpoint-up($bp-min) {
    padding: $spacing-v-desktop + $border-width 0 $spacing-v-desktop;
  }

  // Pseudo gradient border
  &:before {
    content: "";
    position: absolute;
    top: 0;
    height: $border-width;
    width: 100%;
    left: 0;
    right: 0;
    // background-image: linear-gradient(to right, $glitch1, $glitch2);
  }

  // Dark layout
  &--style-dark {
    background: $black;
    color: $white;
  }
}

.project__inner {
  max-width: 1200px;
  margin: 0 auto;
  padding-left: 20px;
  padding-right: 20px;
  align-items: center;
  justify-content: space-around;

  @include media-breakpoint-up($bp-min) {
    display: flex;
    flex-direction: row;
    filter: Grayscale(var(--v-offset-grayscale)); // Wonky capitalization to avoid SCSS grayscale() method
  }

  .project--layout-right & {
    flex-direction: row-reverse;
  }
}

.project__copy,
.project__media {

  // transform: translateY(var(--v-offset-content));
  @include media-breakpoint-up($bp-min) {
    flex-basis: 40%;
    max-width: 40%;
  }
}

.project__copy {
  margin-bottom: 20px;

  @include media-breakpoint-up($bp-min) {
    margin-bottom: unset;
  }
}

$glitch-offset: 5px;
$glitch-anim-duration: 6s; // make this glitch a bit slower to as to not be obnoxious;

.project__title {
  position: relative;
  margin-bottom: 15px;

  @include media-breakpoint-down($bp-max) {
    font-size: 50px;
  }

  @include glitch-text($foreground: $black,
    $background: transparentize(white, 0.9),
    $color1: $glitch1,
    $color2: $glitch2,
    $offset: 10px);

  .project--style-dark & {
    @include glitch-text($foreground: $white,
      $background: $black,
      $color1: $glitch1,
      $color2: $glitch2,
      $offset: $glitch-offset );
  }

  // Stagger the glitch animations on the pseudo elements
  $steps: 20;

  @for $i from 1 to $steps {
    .project:nth-child(#{$i}) & {

      &:before,
      &:after {
        animation-duration: $glitch-anim-duration;
        animation-delay: (1s * $i) + (1s * ($i * (divide($i, $steps))));
      }
    }
  }
}

.project__short-desc {
  p {
    letter-spacing: 0.05em;
    font-size: 15px;
    margin-bottom: 20px;
  }
}

.project__roles {
  opacity: 0.4;
  font-size: 14px;
  margin-bottom: 20px;

  span {
    font-weight: 600;
    text-transform: uppercase;
    margin-right: 4px;
  }

  ul {
    &:before {
      content: "[";
      font-size: 1.1em;
    }

    &:after {
      content: "]";
      font-size: 1.1em;
    }
  }
}

.project__media {
  position: relative;
  display: block;

  // Spacer to enforce 16:9 aspect ratio
  &:before {
    content: "";
    display: block;
    width: 100%;
    height: 0;
    padding-bottom: percentage(divide(9, 16));
    pointer-events: none;

    // On desktop, only a height is specified to constrain the image,
    // since it's juxtaposed beside the text and flows off the page.
    @include media-breakpoint-up($bp-min) {
      min-height: 300px;
      height: 50vh;
      padding-bottom: unset;
    }
  }

  .smart-image {
    @include stretch-within;
    height: 100%;

    @include media-breakpoint-up($bp-min) {
      .project--layout-left & {
        right: unset;
      }

      .project--layout-right & {
        left: unset;
      }
    }

    // Background gradient behind images
    &:before {
      content: "";
      @include stretch-within;
      background-image: linear-gradient(to bottom right, $glitch1, $glitch2);
      width: 100%;
      height: 100%;
      z-index: 0;
      top: 10px;
      bottom: unset;

      .project--layout-left & {
        right: unset;
        left: -10px;
      }

      .project--layout-right & {
        left: unset;
        right: -10px;
      }

      @include media-breakpoint-up($bp-min) {
        transform: translateY(var(--v-offset-bg));
      }
    }
  }

  picture {
    position: relative;
    z-index: 1;
    border: 1px solid $black;
    background-color: white;
    width: 100%;

    .project--style-dark & {
      border-color: $white;
    }

    @include media-breakpoint-up($bp-min) {
      width: 48vw;
    }
  }

  picture,
  img {
    z-index: 1;
    display: block;
    height: 100%;
  }

  img {
    width: 100%;
    object-fit: cover;
    object-position: top left;
  }
}